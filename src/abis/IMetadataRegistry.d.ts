/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import Contract, { contractOptions } from "web3/eth/contract";
import { EventLog, Callback, EventEmitter } from "web3/types";
import { TransactionObject, BlockType } from "web3/eth/types";
import { ContractEvent } from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export class IMetadataRegistry extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: contractOptions
  );
  clone(): IMetadataRegistry;
  methods: {
    getData(_name: string | number[], _key: string): TransactionObject<string>;

    getAddress(
      _name: string | number[],
      _key: string
    ): TransactionObject<string>;

    getUint(_name: string | number[], _key: string): TransactionObject<BN>;
  };
  events: {
    DataChanged: ContractEvent<{
      name: string;
      key: string;
      plainKey: string;
      0: string;
      1: string;
      2: string;
    }>;
    allEvents: (
      options?: EventOptions,
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
